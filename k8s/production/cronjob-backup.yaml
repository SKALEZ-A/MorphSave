apiVersion: batch/v1
kind: CronJob
metadata:
  name: database-backup
  namespace: morphsave-production
spec:
  schedule: "0 2 * * *"  # Daily at 2 AM UTC
  timeZone: "UTC"
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          containers:
          - name: backup
            image: postgres:15
            command:
            - /bin/bash
            - -c
            - |
              set -e
              
              # Install AWS CLI
              apt-get update && apt-get install -y awscli curl
              
              # Create backup
              TIMESTAMP=$(date +%Y%m%d_%H%M%S)
              BACKUP_FILE="/tmp/morphsave_backup_${TIMESTAMP}.sql"
              
              echo "Starting database backup..."
              pg_dump "$DATABASE_URL" \
                --verbose \
                --no-owner \
                --no-privileges > "$BACKUP_FILE"
              
              # Compress backup
              gzip "$BACKUP_FILE"
              BACKUP_FILE="${BACKUP_FILE}.gz"
              
              # Upload to S3
              S3_KEY="database-backups/$(date +%Y/%m/%d)/morphsave_backup_${TIMESTAMP}.sql.gz"
              aws s3 cp "$BACKUP_FILE" "s3://${BACKUP_S3_BUCKET}/${S3_KEY}" \
                --storage-class STANDARD_IA
              
              # Verify backup
              BACKUP_SIZE=$(stat -c%s "$BACKUP_FILE")
              if [ "$BACKUP_SIZE" -gt 1000 ]; then
                echo "Backup completed successfully: ${BACKUP_SIZE} bytes"
                
                # Send success notification
                if [ -n "$SLACK_WEBHOOK_URL" ]; then
                  curl -X POST -H 'Content-type: application/json' \
                    --data "{\"text\":\"âœ… Automated database backup completed: s3://${BACKUP_S3_BUCKET}/${S3_KEY} ($(numfmt --to=iec $BACKUP_SIZE))\"}" \
                    "$SLACK_WEBHOOK_URL"
                fi
              else
                echo "Backup failed - file too small"
                exit 1
              fi
            envFrom:
            - configMapRef:
                name: morphsave-config
            - secretRef:
                name: morphsave-secrets
            resources:
              requests:
                memory: "256Mi"
                cpu: "100m"
              limits:
                memory: "512Mi"
                cpu: "200m"
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: backup-cleanup
  namespace: morphsave-production
spec:
  schedule: "0 3 * * 0"  # Weekly on Sunday at 3 AM UTC
  timeZone: "UTC"
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          containers:
          - name: cleanup
            image: amazon/aws-cli:latest
            command:
            - /bin/bash
            - -c
            - |
              set -e
              
              echo "Starting backup cleanup..."
              
              # Delete backups older than retention period
              CUTOFF_DATE=$(date -d "${BACKUP_RETENTION_DAYS:-30} days ago" +%Y-%m-%d)
              
              aws s3 ls "s3://${BACKUP_S3_BUCKET}/database-backups/" --recursive | \
              while read -r line; do
                BACKUP_DATE=$(echo "$line" | awk '{print $1}')
                BACKUP_KEY=$(echo "$line" | awk '{print $4}')
                
                if [[ "$BACKUP_DATE" < "$CUTOFF_DATE" ]]; then
                  echo "Deleting old backup: $BACKUP_KEY"
                  aws s3 rm "s3://${BACKUP_S3_BUCKET}/$BACKUP_KEY"
                fi
              done
              
              echo "Backup cleanup completed"
            envFrom:
            - configMapRef:
                name: morphsave-config
            - secretRef:
                name: morphsave-secrets
            resources:
              requests:
                memory: "128Mi"
                cpu: "50m"
              limits:
                memory: "256Mi"
                cpu: "100m"